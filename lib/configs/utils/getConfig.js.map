{"version":3,"sources":["../../../src/configs/utils/getConfig.js"],"names":["CWD","process","cwd","pkgPath","resolve","propTypes","context","entry","output","modules","socket","browserslist","proxy","isomorphic","css","existsSync","configPath","pkg","require","nodeVersion","parseFloat","engines","node","match","dependencies","__config__","config","propName","hasOwnProperty","Object","keys","length","console","log","bold","red","JSON","stringify","writeFileSync","Error"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;kBAEe,MAAM;AACpB,OAAMA,MAAMC,QAAQC,GAAR,EAAZ;AACA,OAAMC,UAAU,eAAKC,OAAL,CAAaJ,GAAb,EAAkB,cAAlB,CAAhB;;AAEA,OAAMK,YAAY;AACjBC,4BADiB;AAEjBC,wBAFiB;AAGjBC,0BAHiB;AAIjBC,4BAJiB;AAKjBC,0BALiB;AAMjBC,sCANiB;AAOjBC,wBAPiB;AAQjBC,kCARiB;AASjBC;AATiB,EAAlB;;AAYA,KAAI,aAAGC,UAAH,CAAcZ,OAAd,CAAJ,EAA4B;AAC3B,QAAMa,aAAa,eAAKZ,OAAL,CAAaJ,GAAb,EAAkB,yBAAlB,CAAnB;AACA,QAAMiB,MAAMC,QAAQf,OAAR,CAAZ;AACA,QAAMgB,cAAcC,WAAWH,IAAII,OAAJ,CAAYC,IAAZ,CAAiBC,KAAjB,CAAuB,WAAvB,EAAoC,CAApC,CAAX,CAApB;AACA,QAAMF,UAAUJ,IAAII,OAApB;AACA,QAAMG,eAAeP,IAAIO,YAAzB;;AAEA,MAAI,aAAGT,UAAH,CAAcC,UAAd,CAAJ,EAA+B;AAC9B,SAAMS,aAAaP,QAAQF,UAAR,CAAnB;AACA,SAAMU,SAAS;AACdP,eADc;AAEdE,WAFc;AAGdG;AAHc,IAAf;;AAOA,QAAK,IAAIG,QAAT,IAAqBtB,SAArB,EAAgC;AAC/B,QAAIA,UAAUuB,cAAV,CAAyBD,QAAzB,CAAJ,EAAwC;AACvCD,YAAOC,QAAP,IAAmBtB,UAAUsB,QAAV,EAAoBF,WAAWE,QAAX,CAApB,CAAnB;AACAF,gBAAWE,QAAX,IAAuB,IAAvB;AACA,YAAOF,WAAWE,QAAX,CAAP;AACA;AACD;;AAED,OAAIE,OAAOC,IAAP,CAAYL,UAAZ,EAAwBM,MAAxB,GAAiC,CAArC,EAAwC;AACvCC,YAAQC,GAAR,CAAY,gBAAMC,IAAN,CAAWC,GAAX,CAAgB,kCAAiCC,KAAKC,SAAL,CAAeZ,UAAf,EAA2B,IAA3B,EAAiC,CAAjC,CAAoC,GAArF,CAAZ;AACAO,YAAQC,GAAR,CAAY,gBAAMC,IAAN,CAAWC,GAAX,CAAgB,kDAAhB,CAAZ;AACA;;AAED,UAAOT,MAAP;AACA,GAvBD,MAuBO;AACN,SAAMA,SAAS,EAAf;;AAEA,QAAK,IAAIC,QAAT,IAAqBtB,SAArB,EAAgC;AAC/B,QAAIA,UAAUuB,cAAV,CAAyBD,QAAzB,CAAJ,EAAwC;AACvCD,YAAOC,QAAP,IAAmBtB,UAAUsB,QAAV,EAAoB,IAApB,EAA0B,IAA1B,CAAnB;AACA;AACD;;AAED,gBAAGW,aAAH,CAAiBtB,UAAjB,EAA6BoB,KAAKC,SAAL,CAAeX,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAA7B;;AAEA,uBACIA,MADJ;AAECP,eAFD;AAGCE,WAHD;AAICG;AAJD;AAMA;AACD,EAhDD,MAgDO;AACN,QAAM,IAAIe,KAAJ,CAAU,uGAAV,CAAN;AACA;AACD,C","file":"getConfig.js","sourcesContent":["import path from 'path'\nimport fs from 'fs'\nimport chalk from 'chalk'\nimport context from '../validate-config/context'\nimport entry from '../validate-config/entry'\nimport output from '../validate-config/output'\nimport modules from '../validate-config/modules'\nimport socket from '../validate-config/socket'\nimport browserslist from '../validate-config/browserslist'\nimport proxy from '../validate-config/proxy'\nimport isomorphic from '../validate-config/isomorphic'\nimport css from '../validate-config/css'\n\nexport default () => {\n\tconst CWD = process.cwd()\n\tconst pkgPath = path.resolve(CWD, 'package.json')\n\n\tconst propTypes = {\n\t\tcontext,\n\t\tentry,\n\t\toutput,\n\t\tmodules,\n\t\tsocket,\n\t\tbrowserslist,\n\t\tproxy,\n\t\tisomorphic,\n\t\tcss\n\t}\n\n\tif (fs.existsSync(pkgPath)) {\n\t\tconst configPath = path.resolve(CWD, 'build-tools.config.json')\n\t\tconst pkg = require(pkgPath)\n\t\tconst nodeVersion = parseFloat(pkg.engines.node.match(/(\\d+\\.?)+/)[0])\n\t\tconst engines = pkg.engines\n\t\tconst dependencies = pkg.dependencies\n\n\t\tif (fs.existsSync(configPath)) {\n\t\t\tconst __config__ = require(configPath)\n\t\t\tconst config = {\n\t\t\t\tnodeVersion,\n\t\t\t\tengines,\n\t\t\t\tdependencies\n\t\t\t}\n\n\n\t\t\tfor (let propName in propTypes) {\n\t\t\t\tif (propTypes.hasOwnProperty(propName)) {\n\t\t\t\t\tconfig[propName] = propTypes[propName](__config__[propName])\n\t\t\t\t\t__config__[propName] = null\n\t\t\t\t\tdelete __config__[propName]\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (Object.keys(__config__).length > 0) {\n\t\t\t\tconsole.log(chalk.bold.red(`This is configs not used: \\n\\r\"${JSON.stringify(__config__, null, 2)}\"`))\n\t\t\t\tconsole.log(chalk.bold.red(`Please remove their from build-tools.config.json`))\n\t\t\t}\n\n\t\t\treturn config\n\t\t} else {\n\t\t\tconst config = {}\n\n\t\t\tfor (let propName in propTypes) {\n\t\t\t\tif (propTypes.hasOwnProperty(propName)) {\n\t\t\t\t\tconfig[propName] = propTypes[propName](null, true)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfs.writeFileSync(configPath, JSON.stringify(config, null, 2))\n\n\t\t\treturn {\n\t\t\t\t...config,\n\t\t\t\tnodeVersion,\n\t\t\t\tengines,\n\t\t\t\tdependencies\n\t\t\t}\n\t\t}\n\t} else {\n\t\tthrow new Error('Не найден файл package.json, build-tools предназначен для npm пакетов, пожалуйста выполните npm init.')\n\t}\n}"]}