{"version":3,"sources":["../../../src/configs/utils/getDescription.js"],"names":["chalk","require","module","exports","rootName","relay","yellow","bold"],"mappings":";;AAAA,MAAMA,QAAQC,QAAQ,OAAR,CAAd;;AAEAC,OAAOC,OAAP,GAAiB,CAACC,QAAD,EAAWC,QAAQ,KAAnB,KACf;;KAEGD,QAAS;KACTA,QAAS;KACTA,QAAS;KACTA,QAAS;KACTA,QAAS;;KAETA,QAAS;KACTA,QAAS;KACTA,QAAS;KACTA,QAAS;;KAETC,QAAS,GAAED,QAAS,qFAApB,GAA2G,EAAG;;;KAG9GA,QAAS;KACTA,QAAS;KACTA,QAAS;KACTA,QAAS;KACTA,QAAS;;;KAGRC,QAAQL,MAAMM,MAAN,CAAaC,IAAb,CAAmB;KAC5BH,QAAS;;MAERA,QAAS;;MAETA,QAAS;wDALD,CAAR,GAMsD,EAAI;;;;;;;;;;;;KAY1DC,QAAQL,MAAMM,MAAN,CAAaC,IAAb,CAAmB,mEAAnB,CAAR,GAAgG,EAAI;IA1C1G","file":"getDescription.js","sourcesContent":["const chalk = require('chalk')\n\nmodule.exports = (rootName, relay = false) => (\n\t`\n\tUsage\n\t  ${rootName}                             - запустит WDS\n\t  ${rootName} [-h|--help]                 - покажет список команд\n\t  ${rootName} [build]                     - либо запустит WDS либо сделает пачку в режиме разработки\n\t  ${rootName} [build] [-r | --release]    - либо запустит WDS либо сделает пачку в режиме производства\n\t  ${rootName} [build] [-v | --verbose]    - либо запустит WDS либо сделает пачку в режиме разработки с \n\t                                              дополнительной информацией\n\t  ${rootName} [build] [-a | --analyze]    - запустит серер демонстрирующий компоненты в пачке\n\t  ${rootName} [build] [-d | --debug]      - либо запустит WDS либо сделает пачку в режиме с отладочной информацией\t\n\t  ${rootName} [build] [--mobx | -m]       - Будут применены расширения доступные для mobx\n\t  ${rootName} [build] [--isomorphic | -i] - Будет расширенно приложение и конфигуряция для использование изоморфного \n\t                                              режима\n\t  ${relay ? `${rootName} [build] [--relay]  - Будет расширенно приложения и конфигуряция для работы с relay` : ''}$ \n\t  \n\tEXAMPLES\n\t\t ${rootName} -i        - запустит сборку в изоморфном режиме.\n\t\t ${rootName}           - запустит сборку в spa режиме.\n\t\t ${rootName} -m        - запустит сборку в spa режиме + добавит расширения для mobx.\n\t\t ${rootName} -m -i     - запустит сборку в изоморфном режиме + добавит расширения для mobx.\n\t\t ${rootName} -r -v -d  - запустит сборку в spa режиме + выведет дополнительную информацию + \n\t\t                          приложение будет собираться для production + отладочная информация.\n\t\t                                                \n\t\t ${ relay ? chalk.yellow.bold(`\n\t\t ${rootName} -m -i --relay  - запустит сборку с раширениями для mobx + в изоморфном режиме + в режиме разработки \n\t\t                              relay приложение + добавит расширения для relay. \n    ${rootName} -i --relay     - запустит сборку в изоморфном режиме $+ в режиме разработки relay  приложение + добавит\n                                  расширения для relay.\n    ${rootName} --relay        - запустит сборку в spa режиме + в режиме разработки relay приложение + добавит \n                                  расширения для relay.`) : '' }\n\n\tOptions\n\t\t--typeScript, -ts  Все будет обрабатываться через TypeScript\n\t\t--sync,       -bs  запустит не WDS а BrowserSync как сервер\n\t\t--mobx,       -m   включить расширения доступные для mobx\n\t\t--isomorphic, -i   включить режим изоморфности\n\t\t--verbose,    -v   выводит больше информации\n\t  --release,    -r   запустить в производственном режиме\n\t  --debug,      -d   включить отладочную информацию.\n\t  --analyze,    -a   запуск сборки с запуском сеовеоа который демонстрирует отладочную информацию.\n\t  --help,       -h   показать доступные команды\n\t  ${ relay ? chalk.yellow.bold(`--relay  включить режим для работы с relay и расширения для relay`): '' }\n\t  `\n)"]}