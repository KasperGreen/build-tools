{"version":3,"sources":["../../src/configs/postcss.config.js"],"names":["module","exports","loader","postCssPlugins","require","root","isolation","reset"],"mappings":";;AAAA;;AAEA;AACA;;AAEAA,OAAOC,OAAP,GAAkBC,MAAD,IAAa,CAC7B,GAAG,uBAAIC,cADsB;AAE7B;AACA;AACAC,QAAQ,gBAAR,EAA0B;AACzBC;AADyB,CAA1B,CAJ6B;AAO7B;AACA;AACAD,QAAQ,2BAAR,GAT6B;AAU7B;AACA;AACAA,QAAQ,sBAAR,GAZ6B;AAa7B;AACA;AACAA,QAAQ,sBAAR,GAf6B;AAgB7B;AACA;AACAA,QAAQ,0BAAR,GAlB6B;AAmB7B;AACA;AACAA,QAAQ,wBAAR,GArB6B;AAsB7B;AACA;AACAA,QAAQ,kBAAR,GAxB6B;AAyB7B;AACA;AACAA,QAAQ,0BAAR,GA3B6B;AA4B7B;AACA;AACAA,QAAQ,sBAAR,GA9B6B;AA+B7B;AACA;AACAA,QAAQ,wBAAR,GAjC6B,EAmC7B,IAAG,uBAAIE,SAAJ,GAAgB;AAClB;AACA;AACAF,QAAQ,mBAAR,EAA6B;AAC5BG,QAAO,uBAAIA;AADiB,CAA7B,CAHkB;AAMlB;AACAH,QAAQ,iBAAR,EAA2B;AAC1BG,QAAO,uBAAIA;AADe,CAA3B,CAPkB,CAAhB,GAUC,EAVJ,CAnC6B;;AA+C7B;AACA;AACAH,QAAQ,cAAR,kCAjD6B,CAA9B","file":"postcss.config.js","sourcesContent":["import { browserslist, context, css } from './prepare.build-tools.config'\n\n// webpack.config.js\n// https://github.com/postcss/postcss-loader/tree/v2.0.5\n\nmodule.exports = (loader) => ([\n\t...css.postCssPlugins,\n\t// Transfer @import rule by inlining content, e.g. @import 'normalize.css'\n\t// https://github.com/postcss/postcss-import\n\trequire('postcss-import')({\n\t\troot: context\n\t}),\n\t// W3C variables, e.g. :root { --color: red; } div { background: var(--color); }\n\t// https://github.com/postcss/postcss-custom-properties\n\trequire('postcss-custom-properties')(),\n\t// W3C CSS Custom Media Queries, e.g. @custom-media --small-viewport (max-width: 30em);\n\t// https://github.com/postcss/postcss-custom-media\n\trequire('postcss-custom-media')(),\n\t// CSS4 Media Queries, e.g. @media screen and (width >= 500px) and (width <= 1200px) { }\n\t// https://github.com/postcss/postcss-media-minmax\n\trequire('postcss-media-minmax')(),\n\t// W3C CSS Custom Selectors, e.g. @custom-selector :--heading h1, h2, h3, h4, h5, h6;\n\t// https://github.com/postcss/postcss-custom-selectors\n\trequire('postcss-custom-selectors')(),\n\t// W3C color() function, e.g. div { background: color(red alpha(90%)); }\n\t// https://github.com/postcss/postcss-color-function\n\trequire('postcss-color-function')(),\n\t// Convert CSS shorthand filters to SVG equivalent, e.g. .blur { filter: blur(4px); }\n\t// https://github.com/iamvdo/pleeease-filters\n\trequire('pleeease-filters')(),\n\t// W3C CSS Level4 :matches() pseudo class, e.g. p:matches(:first-child, .special) { }\n\t// https://github.com/postcss/postcss-selector-matches\n\trequire('postcss-selector-matches')(),\n\t// Transforms :not() W3C CSS Level 4 pseudo class to :not() CSS Level 3 selectors\n\t// https://github.com/postcss/postcss-selector-not\n\trequire('postcss-selector-not')(),\n\t// Postcss flexbox bug fixer\n\t// https://github.com/luisrudge/postcss-flexbugs-fixes\n\trequire('postcss-flexbugs-fixes')(),\n\n\t...css.isolation ? [\n\t\t// PostCSS plugin for automatic rules isolation\n\t\t// https://github.com/maximkoretskiy/postcss-autoreset\n\t\trequire('postcss-autoreset')({\n\t\t\treset: css.reset\n\t\t}),\n\t\t// https://github.com/maximkoretskiy/postcss-initial\n\t\trequire('postcss-initial')({\n\t\t\treset: css.reset\n\t\t}),\n\t] : [],\n\n\t// Add vendor prefixes to CSS rules using values from caniuse.com\n\t// https://github.com/postcss/autoprefixer\n\trequire('autoprefixer')(browserslist),\n])\n\n"]}